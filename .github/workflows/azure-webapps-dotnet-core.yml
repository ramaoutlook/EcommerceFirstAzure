# This workflow will build and push a .NET Core app to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-dotnetcore?tabs=net60&pivots=development-environment-vscode
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the AZURE_WEBAPP_PACKAGE_PATH and DOTNET_VERSION environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples





# name: Build and deploy ASP.Net Core app to an Azure Web App

# on:
#   push:
#     branches:
#       - master    # change if you use a different branch

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest
#     permissions:
#       id-token: write
#       contents: read
#     steps:
#       - name: Checkout repo
#         uses: actions/checkout@v4

#       - name: Setup .NET
#         uses: actions/setup-dotnet@v4
#         with:
#           dotnet-version: '9.0.x'   # change to 8.0.x if needed

#       - name: Restore
#         run: dotnet restore

#       - name: Build
#         run: dotnet build --configuration Release --no-restore

#       - name: Publish
#         run: dotnet publish -c Release -o ./publish_output

#       - name: Zip published output
#         run: |
#           cd publish_output
#           zip -r ../app.zip .
#         shell: bash

#       - name: 'Azure Login'
#         uses: azure/login@v2
#         with:
#           creds: ${{ secrets.AZURE_CREDENTIALS }}


#       - name: Deploy zip to Azure Web App
#         run: |
#           az webapp deployment source config-zip \
#             --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
#             --name ${{ secrets.AZURE_WEBAPP_NAME }} \
#             --src ./app.zip
